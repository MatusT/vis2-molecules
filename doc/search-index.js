var searchIndex={};
searchIndex["molecules"] = {"doc":"This applications implements paper Implicit Representation…","i":[[5,"main","molecules","Main function responsible for: - initialization of window…",null,[[]]],[0,"application","","Module containing the application itself.",null,null],[3,"Application","molecules::application","",null,null],[12,"width","","Width of the window",0,null],[12,"height","","Height of the window",0,null],[12,"device","","Device used for rendering",0,null],[12,"queue","","Main queue to which GPU commands are sent",0,null],[12,"start_time","","Time of initilization of program. Used for animation.",0,null],[12,"camera","","Camera of the application.",0,null],[12,"camera_changed","","Holds information whether camera was changed between…",0,null],[12,"voxel_grid","","Voxel grid containing atoms of the molecule.",0,null],[12,"raymarch_globals","","Global variables for ray marching passed to GPU.",0,null],[12,"raymarch_globals_buffer","","GPU buffer for `raymarch_globals`.",0,null],[12,"ssao_globals_buffer","","Global variables for SSAO computation passed to GPU.",0,null],[12,"raymarch_pipeline","","Pipeline for ray marching.",0,null],[12,"render_pipeline","","Pipeline that renders the sphere marched result to the…",0,null],[12,"ssao_pipeline","","Pipeline that adds SSAO to the sphere marched result.",0,null],[12,"gbuffer_positions","","",0,null],[12,"gbuffer_normals","","",0,null],[12,"output_texture","","",0,null],[12,"sdf_default","","",0,null],[12,"sdf_texture","","Texture where signed distance field is stored. Used to…",0,null],[12,"sdf_texture_view","","",0,null],[12,"mouse_pressed","","",0,null],[12,"mouse_position","","",0,null],[11,"new","","Initialized the application.",0,[[["u32"],["option",["str"]],["str"],["surface"]]]],[11,"resize","","Called when window is resized. Recreates textures for…",0,[[["self"],["u32"]]]],[11,"render","","Called each frame to render.",0,[[["self"],["textureview"]]]],[11,"window_event","","",0,[[["self"],["windowevent"]]]],[11,"device_event","","",0,[[["self"],["deviceevent"]]]],[11,"device","","Returns reference to the device used by the application.",0,[[["self"]],["device"]]],[11,"queue_mut","","Returns reference to the device used by the application.",0,[[["self"]],["queue"]]],[11,"update_raymarch_globals","","",0,[[["self"]]]],[11,"solvent_radius","","",0,[[["self"]],["f32"]]],[11,"set_solvent_radius","","",0,[[["f32"],["self"]]]],[11,"max_neighbours","","",0,[[["self"]],["i32"]]],[11,"set_max_neighbours","","",0,[[["self"],["i32"]]]],[0,"camera","molecules","Module that contains implementation(s) of camera(s).",null,null],[3,"RotationCamera","molecules::camera","Rotation camera that always looks at the centre of the…",null,null],[12,"eye","","",1,null],[12,"yaw","","",1,null],[12,"pitch","","",1,null],[12,"distance","","",1,null],[12,"speed","","",1,null],[12,"mouse_pressed","","",1,null],[8,"Camera","","General trait for any implementation of camera.",null,null],[10,"eye","","",2,[[["self"]],["vec3"]]],[10,"set_speed","","",2,[[["f32"],["self"]]]],[11,"new","","Initializes rotation camera with some distance from the…",1,[[["f32"]],["rotationcamera"]]],[11,"direction_vector","","Returns direction vector pointing from the centre to a…",1,[[["self"]],["vec3"]]],[0,"grid","molecules","Module containing everything related to the voxel grid…",null,null],[3,"VoxelPointer","molecules::grid","Pointer to block of memory containing one grid cell of…",null,null],[12,"start","","",3,null],[12,"length","","",3,null],[3,"VoxelGrid","","Voxel grid. Contains information about AABB of the scene…",null,null],[12,"bb_min","","",4,null],[12,"bb_max","","",4,null],[12,"bb_diff","","",4,null],[12,"bb_size","","",4,null],[12,"voxel_length","","",4,null],[12,"voxels","","",4,null],[12,"voxels_len","","",4,null],[12,"voxel_pointers","","",4,null],[12,"voxel_pointers_len","","",4,null],[11,"new","","Initializes the voxel grid. Requires",4,[[["f32"],["vec",["vec4"]],["vec4"],["device"]],["self"]]],[0,"pipelines","molecules","Module of which each submodule contains one or more WebGPU…",null,null],[0,"raymarch","molecules::pipelines","Pipeline that sphere marches the voxel grid of atoms in a…",null,null],[3,"RaymarchGlobals","molecules::pipelines::raymarch","",null,null],[12,"projection","","",5,null],[12,"camera_origin","","",5,null],[12,"padd0","","",5,null],[12,"bb_min","","",5,null],[12,"padd1","","",5,null],[12,"bb_max","","",5,null],[12,"padd2","","",5,null],[12,"bb_diff","","",5,null],[12,"padd3","","",5,null],[12,"bb_size","","",5,null],[12,"voxel_length","","",5,null],[12,"time","","",5,null],[12,"solvent_radius","","",5,null],[12,"max_neighbours","","",5,null],[12,"save","","",5,null],[3,"RaymarchPipeline","","",null,null],[12,"pipeline","","",6,null],[12,"bind_group_layout","","",6,null],[11,"new","","",6,[[["device"]],["self"]]],[0,"render","molecules::pipelines","Pipeline that renders a texture to the swapchain.",null,null],[3,"RenderPipeline","molecules::pipelines::render","",null,null],[12,"pipeline","","",7,null],[12,"bind_group_layout","","",7,null],[11,"new","","",7,[[["device"]],["self"]]],[0,"ssao","molecules::pipelines","Pipeline implementin Screen-Space Ambient Occlusion.",null,null],[3,"SsaoGlobals","molecules::pipelines::ssao","",null,null],[12,"projection","","",8,null],[12,"samples","","",8,null],[12,"noise","","",8,null],[3,"SsaoPipeline","","",null,null],[12,"pipeline","","",9,null],[12,"bind_group_layout","","",9,null],[5,"lerp","","",null,[[["f32"]],["f32"]]],[11,"new","","",9,[[["device"]],["self"]]],[0,"ui","molecules","",null,null],[3,"UserInterface","molecules::ui","",null,null],[12,"solvent_radius_slider","","",10,null],[12,"max_neighbours_slider","","",10,null],[4,"Message","","",null,null],[13,"SolventRadiusChanged","","",11,null],[13,"MaxNeighboursChanged","","",11,null],[11,"new","","",10,[[],["self"]]],[11,"update","","",10,[[["application"],["self"],["message"]]]],[11,"view","","",10,[[["self"],["application"]],[["element",["message","renderer"]],["renderer"],["message"]]]],[0,"utils","molecules","Unassigned helpful utilities.",null,null],[4,"ShaderStage","molecules::utils","",null,null],[13,"Vertex","","",12,null],[13,"Fragment","","",12,null],[13,"Compute","","",12,null],[5,"load_glsl","","",null,[[["str"],["shaderstage"]],[["u32"],["vec",["u32"]]]]],[8,"RoundToMultiple","","",null,null],[10,"round_to_multiple","","",13,[[["self"],["i32"]],["self"]]],[11,"from","molecules::application","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_subset","","",0,[[["self"]],["option"]]],[11,"is_in_subset","","",0,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",0,[[["self"]],["ss"]]],[11,"from_subset","","",0,[[["ss"]],["sp"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","molecules::camera","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"to_subset","","",1,[[["self"]],["option"]]],[11,"is_in_subset","","",1,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",1,[[["self"]],["ss"]]],[11,"from_subset","","",1,[[["ss"]],["sp"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","molecules::grid","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"to_subset","","",3,[[["self"]],["option"]]],[11,"is_in_subset","","",3,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",3,[[["self"]],["ss"]]],[11,"from_subset","","",3,[[["ss"]],["sp"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"to_subset","","",4,[[["self"]],["option"]]],[11,"is_in_subset","","",4,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",4,[[["self"]],["ss"]]],[11,"from_subset","","",4,[[["ss"]],["sp"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","molecules::pipelines::raymarch","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"to_subset","","",5,[[["self"]],["option"]]],[11,"is_in_subset","","",5,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",5,[[["self"]],["ss"]]],[11,"from_subset","","",5,[[["ss"]],["sp"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"to_subset","","",6,[[["self"]],["option"]]],[11,"is_in_subset","","",6,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",6,[[["self"]],["ss"]]],[11,"from_subset","","",6,[[["ss"]],["sp"]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","molecules::pipelines::render","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"to_subset","","",7,[[["self"]],["option"]]],[11,"is_in_subset","","",7,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",7,[[["self"]],["ss"]]],[11,"from_subset","","",7,[[["ss"]],["sp"]]],[11,"vzip","","",7,[[],["v"]]],[11,"from","molecules::pipelines::ssao","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"to_subset","","",8,[[["self"]],["option"]]],[11,"is_in_subset","","",8,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",8,[[["self"]],["ss"]]],[11,"from_subset","","",8,[[["ss"]],["sp"]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"to_subset","","",9,[[["self"]],["option"]]],[11,"is_in_subset","","",9,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",9,[[["self"]],["ss"]]],[11,"from_subset","","",9,[[["ss"]],["sp"]]],[11,"vzip","","",9,[[],["v"]]],[11,"from","molecules::ui","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"to_subset","","",10,[[["self"]],["option"]]],[11,"is_in_subset","","",10,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",10,[[["self"]],["ss"]]],[11,"from_subset","","",10,[[["ss"]],["sp"]]],[11,"vzip","","",10,[[],["v"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"to_subset","","",11,[[["self"]],["option"]]],[11,"is_in_subset","","",11,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",11,[[["self"]],["ss"]]],[11,"from_subset","","",11,[[["ss"]],["sp"]]],[11,"vzip","","",11,[[],["v"]]],[11,"from","molecules::utils","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"to_subset","","",12,[[["self"]],["option"]]],[11,"is_in_subset","","",12,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",12,[[["self"]],["ss"]]],[11,"from_subset","","",12,[[["ss"]],["sp"]]],[11,"vzip","","",12,[[],["v"]]],[11,"eye","molecules::camera","",1,[[["self"]],["vec3"]]],[11,"set_speed","","",1,[[["f32"],["self"]]]],[11,"clone","molecules::grid","",3,[[["self"]],["voxelpointer"]]],[11,"clone","molecules::pipelines::raymarch","",5,[[["self"]],["raymarchglobals"]]],[11,"clone","molecules::pipelines::ssao","",8,[[["self"]],["ssaoglobals"]]],[11,"clone","molecules::ui","",11,[[["self"]],["message"]]],[11,"default","molecules::pipelines::raymarch","",5,[[],["self"]]],[11,"default","molecules::pipelines::ssao","",8,[[],["self"]]],[11,"fmt","molecules::grid","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","molecules::ui","",11,[[["formatter"],["self"]],["result"]]]],"p":[[3,"Application"],[3,"RotationCamera"],[8,"Camera"],[3,"VoxelPointer"],[3,"VoxelGrid"],[3,"RaymarchGlobals"],[3,"RaymarchPipeline"],[3,"RenderPipeline"],[3,"SsaoGlobals"],[3,"SsaoPipeline"],[3,"UserInterface"],[4,"Message"],[4,"ShaderStage"],[8,"RoundToMultiple"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);